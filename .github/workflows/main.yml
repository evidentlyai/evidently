# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  changed_files:
    runs-on: ubuntu-22.04 # windows-latest || macos-latest
    name: üëÄ List Changed Evidently Files
    outputs:
      evidently_any_modified: ${{ steps.changed-files.outputs.evidently_python_any_modified == 'true' }}
    steps:
      - uses: actions/checkout@v4

      - name: Get all python files that have changed
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          files_yaml: |
            evidently_python:
              - .github/**
              - src/evidently/**
              - '!src/evidently/ui/assets/**'
              - '!src/evidently/nbextension/**'
              - example_test.py
              - examples/**/*.ipynb
              - requirements.dev.txt
              - requirements.min.txt
              - setup.py
              - setup.cfg
              - setupbase.py
              - pylintrc
              - tests/**

      - name: Run step if evidently_python file(s) change
        if: steps.changed-files.outputs.evidently_python_any_modified == 'true'
        run: |
          echo "One or more evidently_python file(s) has changed."
          echo "List all the files that have changed: ${{ steps.changed-files.outputs.evidently_python_all_changed_and_modified_files }}"

  linter:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    needs: changed_files
    if: ${{ github.event.pull_request.draft == false && needs.changed_files.outputs.evidently_any_modified == 'true' }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          architecture: "x64"
          cache: "pip"
          cache-dependency-path: requirements.min.txt
      # Runs a single command using the runners shell
      - name: Install dependencies
        run: pip install -r requirements.min.txt && pip install -r requirements.dev.txt
      - name: Run pre-commit
        run: pre-commit run --all
      - name: Run Mypy
        run: mypy

  prepare-cache-data:
    name: Prepare cache data
    runs-on: ubuntu-22.04
    needs: changed_files
    if: ${{ github.event.pull_request.draft == false && needs.changed_files.outputs.evidently_any_modified == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - name: üîç Get bikes dataset cached
        uses: ./.github/share-actions/get-bikes-dataset-cached

  test-minimal:
    name: Test on minimal requirements
    runs-on: ubuntu-22.04
    needs:
      - changed_files
      - prepare-cache-data
    if: ${{ github.event.pull_request.draft == false && needs.changed_files.outputs.evidently_any_modified == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.8"
          architecture: "x64"
          cache: "pip"
          cache-dependency-path: requirements.min.txt

      - name: üîç Get bikes dataset cached
        uses: ./.github/share-actions/get-bikes-dataset-cached

      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Install minimal dependencies
        run: pip install -r requirements.min.txt
      - name: Install package
        run: pip install -e .[dev,spark,fsspec,llm]
      - name: Run Tests
        run: python -m pytest --durations=50
  test:
    # The type of runner that the job will run on
    name: Test ${{ matrix.os }} with py${{ matrix.python }}
    needs:
      - linter
      - prepare-cache-data
    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-13]
        python: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        exclude:
          - os: windows-latest
            python: "3.12"
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          architecture: "x64"
          cache: "pip"
          cache-dependency-path: setup.py
      - uses: actions/cache@v4
        id: cache-scipy-data
        with:
          path: ~/scikit_learn_data
          key: cache-scipy-data
          enableCrossOsArchive: true

      - name: üîç Get bikes dataset cached
        uses: ./.github/share-actions/get-bikes-dataset-cached

      - name: Install package
        run: pip install -e .[dev,spark,fsspec,llm]
      - name: Run Tests
        run: python -m pytest --durations=50

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    needs: changed_files
    if: ${{ github.event.pull_request.draft == false && needs.changed_files.outputs.evidently_any_modified == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.8"
          architecture: "x64"
          cache: "pip"
          cache-dependency-path: setup.py
      - name: Install dependencies
        run: pip install -e .
      - name: Install wheel
        run: pip install wheel
      - name: Build package
        run: python setup.py sdist bdist_wheel
      - name: Archive built package
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
