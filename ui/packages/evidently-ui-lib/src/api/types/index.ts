// This file was auto-generated by openapi-typescript.
import type { components, paths } from '~/api/types/endpoints'

// TODO: fix this `WidgetInfo` import
// use Schemas['BaseWidgetInfo'] instead
import type { WidgetInfo } from '~/api'

export type BackendPaths = paths
///////////////////////////////
///  TYPES
///////////////////////////////
type Schemas = components['schemas']

type OmitNever<T> = { [K in keyof T as T[K] extends never ? never : K]: T[K] }

export type GetSearchParamsAPIs<T extends 'get' | 'post'> = OmitNever<{
  [P in keyof paths]: paths[P] extends Record<T, { parameters: { query?: infer Z } }> ? Z : never
}>

export type ProjectModel = Schemas['Project']
export type ReportModel = Schemas['ReportModel']
export type MetadataModel = ReportModel['metadata']
export type DownloadSnapshotURL = keyof BackendPaths

// TODO: fix this `WidgetInfo`
export type DashboardInfoModel = Omit<Schemas['DashboardInfoModel'], 'widgets'> & {
  widgets: WidgetInfo[]
}

export type SeriesModel = Schemas['SeriesResponse']
export type BatchMetricDataModel = Schemas['BatchMetricData']
export type DashboardModel = Schemas['DashboardModel']
export type DashboardPanelPlotModel = Schemas['DashboardModel']['panels'][number]
